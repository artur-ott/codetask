# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                               controllers.Application.index
GET     /dashboard                      controllers.Application.dashboard
GET     /course/:courseId               controllers.Application.course(courseId: Long)
GET     /login                          controllers.Auth.login
GET     /logout                         controllers.Auth.logout
GET     /register                       controllers.Auth.register
POST    /submit                         controllers.Auth.submit
POST    /authenticate                   controllers.Auth.authenticate
GET     /subscribe/:courseId            controllers.Application.subscribe(courseId: Long)
GET     /unsubscribe/:courseId          controllers.Application.unsubscribe(courseId: Long)
GET     /course/:courseId/:userId       controllers.Application.showCourse(courseId: Long, userId: Long)

# API
GET     /api/courses/all                controllers.Application.getCourses
POST    /api/courses                    controllers.Application.createCourse
GET     /api/courses/:courseId          controllers.Application.getCourse(courseId: Long)
PUT     /api/courses/:courseId          controllers.Application.updateCourse(courseId: Long)
DELETE  /api/courses/:courseId          controllers.Application.deleteCourse(courseId: Long)

GET     /api/users/all                  controllers.Application.getUsers
GET     /api/users/students             controllers.Application.getStudents
POST    /api/users                      controllers.Application.createUser
GET     /api/users/:userId              controllers.Application.getUser(userId: Long)
PUT     /api/users/:userId              controllers.Application.updateUser(userId: Long)
DELETE  /api/users/:userId              controllers.Application.deleteUser(userId: Long)

POST    /api/solutions/:courseId        controllers.Application.storeSolution(courseId: Long)
GET     /api/solutions/:courseId        controllers.Application.getSolution(courseId: Long)
POST    /api/interpreter/scala          controllers.Application.interpretScala

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
